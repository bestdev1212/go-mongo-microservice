version: "3.8"
services:
  proxy:
    image: traefik:v2.3.7
    command:
      - "--api"
      - "--api.dashboard"
      - "--api.insecure"
      - "--providers.docker"
      - "--entrypoints.web.address=:80"
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host

  movies:
    build: ./movies
    command:
      - "-mongoURI"
      - "mongodb://db:27017"
      # - "-enableCredentials"
      # - "true"
    # environment:
    #   MONGODB_USERNAME: "demo"
    #   MONGODB_PASSWORD: "e3LBVTPdlzxYbxt9"
    labels:
      - "traefik.http.routers.movies.rule=PathPrefix(`/api/movies/`)"

  bookings:
    build: ./bookings
    command:
      - "-mongoURI"
      - "mongodb://db:27017"
      # - "-enableCredentials"
      # - "true"
    # environment:
    #   MONGODB_USERNAME: "demo"
    #   MONGODB_PASSWORD: "e3LBVTPdlzxYbxt9"
    labels:
      - "traefik.http.routers.bookings.rule=PathPrefix(`/api/bookings/`)"

  showtimes:
    build: ./showtimes
    command:
      - "-mongoURI"
      - "mongodb://db:27017"
      # - "-enableCredentials"
      # - "true"
    # environment:
    #   MONGODB_USERNAME: "demo"
    #   MONGODB_PASSWORD: "e3LBVTPdlzxYbxt9"
    labels:
      - "traefik.http.routers.showtimes.rule=PathPrefix(`/api/showtimes/`)"

  users:
    build: ./users
    command:
      - "-mongoURI"
      - "mongodb://db:27017"
      # - "-enableCredentials"
      # - "true"
    # environment:
    #   MONGODB_USERNAME: "demo"
    #   MONGODB_PASSWORD: "e3LBVTPdlzxYbxt9"
    labels:
      - "traefik.http.routers.users.rule=PathPrefix(`/api/users/`)"

  db:
    image: mongo:4.2.11
    ports:
      - target: 27017
        published: 27017
        protocol: tcp
        mode: host
    volumes:
      - type: bind
        source: ./backup
        target: /backup
